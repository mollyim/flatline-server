services:
  whisper-service:
    container_name: flatline-whisper-service
    image: flatline-whisper-service:0.0.0-dirty-SNAPSHOT-dev
    pull_policy: never # Only use a local container image.
    environment:
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT_OVERRIDE=http://flatline-localstack:4566
      - SIGNAL_DISABLE_LOGSTASH_TCP_SOCKET_APPENDER=1
      - BIGTABLE_EMULATOR_HOST=flatline-bigtable:8086
    expose:
      - 8080 # Application
      - 8081 # Administration
    volumes:
      - ../dev/noise-tunnel-keystore.p12:/usr/share/signal/noise-tunnel-keystore.p12
      # Overwrite configuration files in container image.
      - ../service/config/dev.yml:/usr/share/signal/dev.yml
      - ../service/config/sample-secrets-bundle.yml:/usr/share/signal/sample-secrets-bundle.yml
    depends_on:
      localstack:
        condition: service_healthy
      redis-0:
        condition: service_healthy
      registration-service:
        condition: service_healthy
      otel-collector:
        condition: service_started
      bigtable:
        condition: service_healthy
  storage-service:
    container_name: flatline-storage-service
    image: flatline-storage-service:0.0.0-dirty-SNAPSHOT-dev
    pull_policy: never # Only use a local container image.
    environment:
      - AWS_REGION=us-east-1
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=10080
      - ADMIN_HOST=0.0.0.0
      - ADMIN_HTTP_PORT=10081
      - BIGTABLE_EMULATOR_HOST=flatline-bigtable:8086
    expose:
      - 10080 # Application
      - 10081 # Administration
    volumes:
      # Overwrite configuration files in container image.
      - ../storage-service/config/dev.yml:/usr/share/signal/dev.yml
    depends_on:
      bigtable:
        condition: service_healthy
  registration-service:
    container_name: flatline-registration-service
    image: flatline-registration-service:0.0.0-dirty-SNAPSHOT-dev
    pull_policy: never # Only use a local container image.
    healthcheck:
      test: [ CMD-SHELL, "timeout 1s bash -c '</dev/tcp/localhost/50051' || exit 1" ]
      interval: 2s
      timeout: 1s
      retries: 10
    expose:
      - 50051 # API
  localstack:
    container_name: flatline-localstack
    image: localstack/localstack:4.6.0
    healthcheck:
      test: [ CMD-SHELL, "curl -s localhost:4566/_localstack/init/ready | grep '\"completed\": true'" ]
      interval: 2s
      timeout: 1s
      retries: 10
      start_period: 30s
    expose:
      - 4566 # API
    environment:
      - DISABLE_EVENTS=1
    volumes:
      - dev-localstack-data:/var/lib/localstack
      - ../dev/localstack:/etc/localstack/init/ready.d
      - ../service/config/dynamic/dev.yml:/tmp/dev.yml
  redis-0:
    container_name: flatline-redis-0
    image: bitnami/redis-cluster:8.0.3
    expose:
      - 6379 # Redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_CLUSTER_CREATOR=yes
      - REDIS_CLUSTER_REPLICAS=0
      - REDIS_NODES=redis-0 redis-1 redis-2
    volumes:
      - dev-redis-0-data:/bitnami
    healthcheck:
      test: [ CMD-SHELL, "redis-cli cluster info | grep ^cluster_state:ok" ]
      interval: 2s
      timeout: 1s
      retries: 10
    depends_on:
      redis-1:
        condition: service_started
      redis-2:
        condition: service_started
  redis-1:
    container_name: flatline-redis-1
    image: bitnami/redis-cluster:8.0.3
    expose:
      - 6379 # Redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis-0 redis-1 redis-2
    volumes:
      - dev-redis-1-data:/bitnami
  redis-2:
    container_name: flatline-redis-2
    image: bitnami/redis-cluster:8.0.3
    expose:
      - 6379 # Redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis-0 redis-1 redis-2
    volumes:
      - dev-redis-2-data:/bitnami
  tus:
    # Original implementation: https://github.com/signalapp/tus-server
    container_name: flatline-tus
    image: ghcr.io/tus/tusd:v2.8.0
    expose:
      - 8080 # tusd
    command: []
  otel-collector:
    container_name: flatline-otel-collector
    image: otel/opentelemetry-collector-contrib:0.129.1
    command: [ "--config=/etc/otel-collector.yaml" ]
    expose:
      - 8125 # StatsD
      - 4317 # OTel gRPC
      - 4318 # OTel HTTP
      - 13133 # Healthcheck
    # No healthcheck, as this image has no other binaries.
    volumes:
      - ../dev/otel-collector.yaml:/etc/otel-collector.yaml
  prometheus:
    container_name: flatline-prometheus
    image: prom/prometheus:v3.4.2
    ports:
      - 9090:9090 # Prometheus UI
    volumes:
      - ../dev/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      otel-collector:
        condition: service_started
  bigtable:
    container_name: flatline-bigtable
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:489.0.0-emulators
    command: [ "/bin/bash", "-c", "gcloud beta emulators bigtable start --host-port=0.0.0.0:8086" ]
    environment:
      - BIGTABLE_EMULATOR_HOST=localhost:8086
    expose:
      - 8086 # Bigtable
    healthcheck:
      test: [ CMD-SHELL, "timeout 1s bash -c '</dev/tcp/localhost/8086' || exit 1" ]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 5s
  envoy:
    container_name: flatline-envoy
    image: envoyproxy/envoy:v1.34.2
    ports:
      - 9901:9901 # Proxy Administration
      - 8443:8443 # HTTP Proxy Whisper Service
      - 10443:10443 # HTTP Proxy Storage Service
    volumes:
      - ../dev/envoy/envoy.yml:/etc/envoy/envoy.yaml:ro
      - ../dev/envoy/localhost.pem:/etc/envoy/localhost.pem:ro
      - ../dev/envoy/localhost.key:/etc/envoy/localhost.key:ro
    depends_on:
      whisper-service:
        condition: service_started
      storage-service:
        condition: service_started
volumes:
  dev-localstack-data:
  dev-redis-0-data:
  dev-redis-1-data:
  dev-redis-2-data:
